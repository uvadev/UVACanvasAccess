using System;
using System.Collections.Generic;
using JetBrains.Annotations;
using UVACanvasAccess.ApiParts;
using UVACanvasAccess.Model.Conversations;
using UVACanvasAccess.Structures.Discussions;
using UVACanvasAccess.Structures.Submissions;
using UVACanvasAccess.Util;

namespace UVACanvasAccess.Structures.Conversations {
    
    /// <summary>
    /// Represents a message in a <see cref="Conversation"/>.
    /// </summary>
    [PublicAPI]
    public class ConversationMessage : IPrettyPrint {
        private readonly Api api;
        
        /// <summary>
        /// The message's ID.
        /// </summary>
        public ulong Id { get; }

        /// <summary>
        /// The message's creation time.
        /// </summary>
        public DateTime CreatedAt { get; }
        
        /// <summary>
        /// The message's body.
        /// </summary>
        public string Body { get; }
        
        /// <summary>
        /// The id of the message's author.
        /// </summary>
        public ulong AuthorId { get; }
        
        /// <summary>
        /// Whether or not the message was generated by the system.
        /// </summary>
        public bool Generated { get; }
        
        /// <summary>
        /// The associated <see cref="MediaComment"/>, if present.
        /// </summary>
        [CanBeNull]
        public MediaComment MediaComment { get; }
        
        /// <summary>
        /// Forwarded messages, if present.
        /// </summary>
        public IEnumerable<ConversationMessage> ForwardedMessages { get; }

        /// <summary>
        /// The message's attachments, if present.
        /// </summary>
        public IEnumerable<FileAttachment> Attachments { get; }

        internal ConversationMessage(Api api, ConversationMessageModel model) {
            this.api = api;
            Id = model.Id;
            CreatedAt = model.CreatedAt;
            Body = model.Body;
            AuthorId = model.AuthorId;
            Generated = model.Generated;
            MediaComment = model.MediaComment.ConvertIfNotNull(mc => new MediaComment(api, mc));
            ForwardedMessages = model.ForwardedMessages.SelectNotNull(fm => new ConversationMessage(api, fm));
            Attachments = model.Attachments.SelectNotNull(a => new FileAttachment(api, a));
        }

        /// <inheritdoc />
        public string ToPrettyString() {
            return "ConversationMessage {" +
                   ($"\n{nameof(Id)}: {Id}," +
                   $"\n{nameof(CreatedAt)}: {CreatedAt}," +
                   $"\n{nameof(Body)}: {Body}," +
                   $"\n{nameof(AuthorId)}: {AuthorId}," +
                   $"\n{nameof(Generated)}: {Generated}," +
                   $"\n{nameof(MediaComment)}: {MediaComment?.ToPrettyString()}," +
                   $"\n{nameof(ForwardedMessages)}: {ForwardedMessages.ToPrettyString()}," +
                   $"\n{nameof(Attachments)}: {Attachments.ToPrettyString()}").Indent(4) + 
                   "\n}";
        }
    }
}
